<?php

use Drupal\group\Entity\GroupRelationship;

/**
 * implements hook_form_alter()
 */
function digitalia_muni_universal_form_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
	if (is_null(parseFormIDs()[$form_id])) {
		return;
	}

	$group_config = parseGroupConfiguration();

	$node = \Drupal::routeMatch()->getParameter('node');

	$gids = getGroupIDs($node);
	$allowed_fields = array();

	// gather all allowed fields based on group membership of a node
	foreach ($gids as $gid) {
		foreach ($group_config[$gid] as $_index2 => $field_name) {
			$allowed_fields[$field_name] = 0;
		}
	}


	$available_fields = array();

	// TODO: check user group membership
	// find fields
	foreach (array_keys($form) as $key) {
		if (str_starts_with($key, "field_")) {
			$available_fields[$key] = 0;
		}
	}


	// remove allowed fields from available fields
	foreach ($allowed_fields as $allowed_key => $_value) {
		unset($available_fields[$allowed_key]);
	}


	// rename for clarity
	$fields_to_remove = $available_fields;


	foreach($fields_to_remove as $removed_field => $_value) {
		$form[$removed_field]['#access'] = FALSE;
	}

} function parseGroupConfiguration()
{
	$group_config = \Drupal::config('digitalia_muni_universal_form.settings')->get('group_field_config');

	$lines = explode("\n", $group_config);

	$parsed = array();
	foreach ($lines as $line) {
		$split = explode("::", $line);

		$fields = explode(",", $split[1]);

		$parsed[$split[0]] = $fields;
	}
	
	return $parsed;

}

function parseFormIDs()
{
	$form_config = \Drupal::config('digitalia_muni_universal_form.settings')->get('enabled_form_ids');
	$list = explode(",", $form_config);
	$parsed = array();

	foreach ($list as $form_id) {
		$parsed[$form_id] = 0;
	}

	return $parsed;
}

function getGroupIDs($entity)
{

	$gids = [];

	$group_contents = GroupRelationship::loadByEntity($entity);

	foreach ($group_contents as $group_content) {
		$gids[] = $group_content->getGroup()->id();
	}

	return $gids;
}
